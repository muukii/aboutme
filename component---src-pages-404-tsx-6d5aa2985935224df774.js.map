{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","a","Consumer","staticQueryData","data","query","render","children","object","func","SEO","this","react","gatsby_browser_entry_StaticQuery","site","metaDescription","description","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","meta","name","content","property","author","concat","keywords","length","join","_3722103743","defaultProps","lang","Container","styled","div","_templateObject","Layout","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAaeM,UARM,kBACnBH,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACE,EAAA,EAAD,CAAKE,MAAM,mBACXJ,EAAA,qCACAA,EAAA,yGCTJ,IAAsBK,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,2NCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMC,cAAcC,IAApBC,OAAAC,OAAA,CACLT,WACAC,iBACGA,EAAcS,QAIrBZ,EAAiBa,UAAY,CAC3BX,SAAUY,IAAUC,MAAM,CACxBT,SAAUQ,IAAUE,OAAOC,aAC1BA,YAGUjB,6HCTTkB,gBAAqBX,IAAMY,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAf,cAACU,EAAmBM,SAApB,KACG,SAAAC,GACC,OACEJ,EAAMK,MACLD,EAAgBJ,EAAMM,QAAUF,EAAgBJ,EAAMM,OAAOD,MAEtDL,EAAMO,QAAUP,EAAMQ,UAC5BR,EAAMK,KAAOL,EAAMK,KAAKA,KAAOD,EAAgBJ,EAAMM,OAAOD,MAGvDJ,EAAAC,EAAAf,cAAA,uCA4BfY,EAAYP,UAAY,CACtBa,KAAMZ,IAAUgB,OAChBH,MAAOb,IAAUE,OAAOC,WACxBW,OAAQd,IAAUiB,KAClBF,SAAUf,IAAUiB,UCrChBC,4FASJJ,OAAA,WACE,IAAMP,EAAQY,KAAKZ,MAEnB,OACEa,EAAA,cAACC,EAAD,CACER,MAAK,aAWLC,OAAQ,SAAAF,GACN,IAAMU,EAAOV,EAAKU,KACZC,EACJhB,EAAMiB,aAAeF,EAAKG,aAAaD,YACzC,OACEJ,EAAA,cAACM,EAAAjB,EAAD,CACEkB,eACE,GAIF/C,MAAO2B,EAAM3B,MACbgD,cAAa,QAAUN,EAAKG,aAAa7C,MACzCiD,KAAM,CACJ,CACEC,KAAI,cACJC,QAASR,GAEX,CACES,SAAQ,WACRD,QAASxB,EAAM3B,OAEjB,CACEoD,SAAQ,iBACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASxB,EAAM3B,OAEjB,CACEkD,KAAI,sBACJC,QAASR,IAGVW,OACC3B,EAAM4B,SAASC,OAAS,EACpB,CACEN,KAAI,WACJC,QAASxB,EAAM4B,SAASE,KAAf,OAEX,IAELH,OAAO3B,EAAMsB,SAnExBjB,KAAA0B,QAbY7C,aAAZyB,EACGqB,aAAsB,CAC3Bf,YAAa,GACbgB,KAAM,KACNX,KAAM,GACNM,SAAU,GACVvD,MAAO,IAmFIsC,gJC/Ff,IAMMuB,SAAYC,EAAOC,IAAVC,KACAC,IAPA,SAAA1D,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OACb+B,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACL,EAAD,KAAY1B","file":"component---src-pages-404-tsx-6d5aa2985935224df774.js","sourcesContent":["import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql, StaticQuery } from \"gatsby\"\n\ntype Props = {\n  description?: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n  data?: { site: any }\n}\n\nclass SEO extends React.Component<Props, {}> {\n  static defaultProps: Props = {\n    description: \"\",\n    lang: \"en\",\n    meta: [],\n    keywords: [],\n    title: \"\",\n  }\n\n  render() {\n    const props = this.props\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n                description\n                author\n              }\n            }\n          }\n        `}\n        render={data => {\n          const site = data.site\n          const metaDescription =\n            props.description || site.siteMetadata.description\n          return (\n            <Helmet\n              htmlAttributes={\n                {\n                  // props.lang,\n                }\n              }\n              title={props.title}\n              titleTemplate={`%s | ${site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: props.title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n                {\n                  name: `twitter:card`,\n                  content: `summary`,\n                },\n                {\n                  name: `twitter:creator`,\n                  content: site.siteMetadata.author,\n                },\n                {\n                  name: `twitter:title`,\n                  content: props.title,\n                },\n                {\n                  name: `twitter:description`,\n                  content: metaDescription,\n                },\n              ]\n                .concat(\n                  props.keywords.length > 0\n                    ? {\n                        name: `keywords`,\n                        content: props.keywords.join(`, `),\n                      }\n                    : []\n                )\n                .concat(props.meta)}\n            />\n          )\n        }}\n      />\n    )\n  }\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport * as React from \"react\"\n\nimport \"./layout.css\"\nimport \"normalize.css\"\nimport styled from \"styled-components\"\n\n// @ts-ignore\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n)\n\nconst Container = styled.div``\nexport default Layout\n"],"sourceRoot":""}